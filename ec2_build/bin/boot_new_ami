#!/usr/bin/env python
# Copyright (c) 2009 Cloudera, inc.
# https://wiki.cloudera.com/display/PRODUCT/Freezer

import sys
import os
import boto
from optparse import OptionParser
import time
import cloudera.aws.ec2
from cloudera.utils import verbose_print
import cloudera.staging.ArchiveManager

def main(args):
  usage = "usage: %prog  [options] <snap_id> "
  op = OptionParser(usage=usage)
  op.add_option('-d', '--dry-run',
    action="store_true",
    default=False,
    help="Dont do anything just pretend")

  default_sec_group_name = 'Build-Artifact-%s' % time.strftime('%Y%m%d_%H%M%S',time.gmtime())
  op.add_option('-g','--security-group-name', 
    default=default_sec_group_name,
   help="Override the default security group name")

  default_keyname = 'build' 
  op.add_option('-k','--key-name',
     default=default_keyname,
     help="The keyname authorized by default %s" % default_keyname)

  default_sec_group_desc = 'Open HTTP for Cloudera and SSH for everyone' 
  op.add_option('-i','--security-group-desc',
     default=default_sec_group_desc,
     help="Override the default security group Description")

  ami = cloudera.staging.ArchiveManager.ArchiveManager.DEFAULT_AMI
  op.add_option('-a','--ami', default=ami,
    help="The alternative ami to boot: %s"  % ami)
  
  op.add_option('-q','--quiet',
    default=False,
     help="Print what's going on")

  (options, args) = op.parse_args()

  if len(args) != 1:
    op.error("I need more arguments")
	
  snapshot = args[0]
	
  ec2_connection = boto.connect_ec2()
  archive = cloudera.staging.ArchiveManager.ArchiveManager(ec2_connection)
  
  instance = archive.kickOff(snapshot, options.security_group_name, options.security_group_desc, options.key_name, options.ami)
  print("New host booted at %s" % instance.dns_name)

if __name__ == "__main__":
  main(sys.argv)
