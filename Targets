#!/usr/bin/python
#
# (c) Copyright 2009 Cloudera, Inc.
#
# Master Targets file for Cloudera Hadoop distribution (CH) system

# Set some version constants which appear throughout this project.

# Version of Hadoop our system is based on:
base_hadoop_ver = "0.18.3"
hadoop_ver_string = "hadoop-" + base_hadoop_ver

# Cloudera Hadoop dist version.
base_ch_ver = "0.3.0"

# RPM release number
rpm_release="6.cloudera.CH0_3"

# List of all distribution editions we compile from this tree.
# This is the default target.
allDistributions = EmptyPackageTarget(
  requiredTargets = [ ":supportedDistro" ])

version = VerStringTarget(
  version      = base_ch_ver,
  pythonModule = "installer.version")

# NOTE(aaron): This is not currently enabled in any way in our distribution.
# include the portal source code
# portalComponent = DirComponent(
#  srcDir  = "portal/src",
#  destDir = "$/src/webapps/portal")

supportedHadoopPackage = PackageTarget(
  packageName   = "distrib-hadoop",
  components    = [
    # Relocate the topdir into the assembly dir
    DirComponent(
      srcDir = "rpm/topdir",
      destDir = "$/topdir"),

    # Run the rpm build script
    ExecComponent(
      executable="%(srcdir)/rpm/create_rpms",
      arguments=[
        "hadoop",
        "%(assemblydir)/buildroot",
        "%(assemblydir)/topdir",
        rpm_release,
        base_hadoop_ver ],
      dir="%(assemblydir)/topdir"),

    # Create hadoop tarball.
    TarComponent(
      filename= hadoop_ver_string + ".tar.gz",
      subdir="topdir/BUILD/" + hadoop_ver_string + "/build/" + hadoop_ver_string),
  ],

  # Define build-phase outputs that other programs compiled against our distro need.
  outputs = [
      "$/topdir/BUILD/" + hadoop_ver_string + "-core.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "-test.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "-tools.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "-examples.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/commons-cli-2.0-SNAPSHOT.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/commons-codec-1.3.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/commons-httpclient-3.0.1.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/commons-logging-1.0.4.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/commons-logging-api-1.0.4.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/commons-net-1.4.1.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/jets3t-0.6.0.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/jetty-5.1.4.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/junit-3.8.1.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/kfs-0.1.3.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/log4j-1.2.15.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/oro-2.0.8.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/servlet-api.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/slf4j-api-1.4.3.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/slf4j-log4j12-1.4.3.jar",
      "$/topdir/BUILD/" + hadoop_ver_string + "/lib/xmlenc-0.52.jar",
    ])

# components for packaging

# Hadoop itself!
hadoopComponent = PackageComponent(
  targetName = ":supportedHadoopPackage",
  includeZip = True,
  destDir    = "$/packages")

# the installation system
installerComponent = PackageComponent(
  targetName = "installer:release",
  includeZip = False, # we need this unpackacked
  destDir    = "$/bin")

# the log mover system
logMoverComponent = PackageComponent(
  targetName = "log_mover:release",
  includeZip = False, # we need this unpackacked
  destDir    = "$/bin/logmover")

# Take the pig tgz package we assembled in thirdparty/pig/ and include that
# in our distribution package.
# NOTE(aaron): If you change this, change the version stamp below.
pigPackageComponent = PackageComponent(
  targetName = "//thirdparty/pig-0.1.1:pigPackage",
  includeZip = True,
  destDir    = "$/packages")

# Take the hive tgz package we assembled in thirdparty/hive/ and include
# this in our distribution package.
# NOTE(aaron): If you change this, change the version stamp below.
hivePackageComponent = PackageComponent(
  targetName = "//thirdparty/hive-chd-0.3.0:hivePackage",
  includeZip = True,
  destDir    = "$/packages")


# copy all the doc/ directory in
docsComponent = DirComponent(
  srcDir  = "doc",
  destDir = "$/doc")

# and put a redundant copy of the README in the top level, so the
# user sees it straight away.
readmeComponent = FileComponent(srcFile = "doc/README")

# dependencies such as scribe libraries, configuration files, etc
depsComponent = DirComponent(
  srcDir  = "deps",
  destDir = "$/deps")

# There may be several versions of how we package the distribution.
# supportedDistro is the one released to support clients
supportedDistro = PackageTarget(
  packageName = "cloudera-hadoop",
  version     = ":version",
  components  = [
    hadoopComponent,
    installerComponent,
    logMoverComponent,
    pigPackageComponent,
    hivePackageComponent,
    depsComponent,
    docsComponent,
    readmeComponent
  ],
  manifestFile = "manifest")

# Version stamps: make a single indirection point where all the
# version stamps are listed, so that the installer and test programs
# can depend on only a single place. We only need to update the current
# package version numbers in this single Targets file.
versionStamps = EmptyTarget(
  requiredTargets = [
    "//thirdparty/hive-chd-0.3.0:version",
    "//thirdparty/pig-0.1.1:version",
    ":version" ])

# subdirectory targets:
#   installer -- guided and noattend python installation system
#   test      -- Cluster Test tool (not included in distro itself)
ProjectList(requiredTargets=[
  "installer",
  "log_mover",
  "test"
  ])


defaultTarget(allDistributions)

