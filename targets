#!/usr/bin/python
#
# (c) Copyright 2009 Cloudera, Inc.
#
# Master Targets file for Cloudera Hadoop distribution (CH) system

# Set some version constants which appear throughout this project.

# Version of Hadoop our system is based on:
base_hadoop_ver = "0.18.3"
hadoop_ver_string = "hadoop-" + base_hadoop_ver

# Cloudera Hadoop dist version.
base_ch_ver = "0.3.0"

# RPM release number
rpm_release="12.cloudera.CH0_3"

# pig version
base_pig_ver="0.1.1"

RegisterProperty('projects.HadoopDist.base_ch_ver', base_ch_ver)
RegisterProperty('projects.HadoopDist.release', rpm_release)
RegisterProperty('projects.HadoopDist.base_hadoop_ver', base_hadoop_ver)
RegisterProperty('projects.HadoopDist.base_pig_ver', base_pig_ver)

hadoop_cloudera_ver_string = "hadoop-%s-%s" % (base_hadoop_ver, rpm_release)

supportedHadoopPackage = PackageTarget(
  package_name = hadoop_cloudera_ver_string,
  clean_first=True,
  steps = [
    # unpack pristine hadoop
    Exec(
      executable="${tar-exec}",
      arguments=["--strip-components=1",
                 "-xzf",
                 "%%(srcdir)/repos/pristine/%s.tar.gz" % hadoop_ver_string],
      inputs=["%%(srcdir)/repos/pristine/%s.tar.gz" % hadoop_ver_string]),
    # copy cloudera dir inside
    CopyDir(
      src_dir="hadoop",
      dest_dir="$/cloudera"),
    # clouderification:
    #   - applies our patches
    #   - inserts our files
    Exec(
      executable="%(assemblydir)/cloudera/clouderify_hadoop.py",
      arguments=["%(assemblydir)/",
                 base_hadoop_ver,
                 rpm_release
                 ]),
    AntCall(
      build_file = "$/cloudera/build.xml",
      properties = {'version': '%s-%s' % (base_hadoop_ver, rpm_release),
                    'libhdfs': 'true',
                    'compile.native': 'true',
                    'compile.c++': 'true'},
      ant_target = "package"),
    Tar(
      filename = hadoop_cloudera_ver_string + ".tar.gz",
      dir = "build/%s" % (hadoop_cloudera_ver_string)
      ),
  ],
  # Define build-phase outputs that other programs compiled against our distro need.
  outputs = ["$/build/" + hadoop_cloudera_ver_string + "/" + path for path in
             [hadoop_cloudera_ver_string + "-core.jar",
              hadoop_cloudera_ver_string + "-test.jar",
              hadoop_cloudera_ver_string + "-tools.jar",
              "/build/" + hadoop_cloudera_ver_string + "-examples.jar",
              "/lib/commons-cli-2.0-SNAPSHOT.jar",
              "/lib/commons-codec-1.3.jar",
              "/lib/commons-httpclient-3.0.1.jar",
              "/lib/commons-logging-1.0.4.jar",
              "/lib/commons-logging-api-1.0.4.jar",
              "/lib/commons-net-1.4.1.jar",
              "/lib/jets3t-0.6.0.jar",
              "/lib/jetty-5.1.4.jar",
              "/lib/junit-3.8.1.jar",
              "/lib/kfs-0.1.3.jar",
              "/lib/log4j-1.2.15.jar",
              "/lib/oro-2.0.8.jar",
              "/lib/servlet-api.jar",
              "/lib/slf4j-api-1.4.3.jar",
              "/lib/slf4j-log4j12-1.4.3.jar",
              "/lib/xmlenc-0.52.jar",
              ]])

# steps for packaging

# the installation system
# NOTE(aaron): This is disabled for now
#installerStep = IncludePackage(
#  target_name = "installer:release",
#  include_zip = False, # we need this unpackacked
#  dest_dir    = "$/bin")

# the log mover system
# NOTE(aaron): This is disabled for now
#logMoverStep = IncludePackage(
#  target_name = "log_mover:release",
#  include_zip = False, # we need this unpackacked
#  dest_dir    = "$/bin/logmover")


# NOTE(aaron): Contents of doc and deps directories are not currently used/built


# subdirectory targets:
#   installer -- guided and noattend python installation system
#   test      -- Cluster Test tool (not included in distro itself)
ProjectList(required_targets=[
  "repos/hadoop-package/rpm",
  "repos/hadoop-package/deb",
  "repos/hive-package/rpm",
  "repos/hive-package/deb",
  "repos/pig-package/rpm",
  "repos/pig-package/deb",
  ":supportedHadoopPackage",
  ])
